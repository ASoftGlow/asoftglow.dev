# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-dev:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Persist npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}

      - name: Persist Eleventy .cache
        uses: actions/cache@v3
        with:
          path: ./.cache
          key: ${{ runner.os }}-eleventy-fetch-cache

      - run: npm install
      - run: npm run build
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          # Upload entire repository
          path: '_site'
          name: dev
          
  # build-scra:
  #   if: "!contains(github.event.commits[0].message, '[skip ci]')"
  #   needs: build-dev
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: github-pages
  
  #   steps:
  #     - name: Checkout SCRA
  #       uses: actions/checkout@v3
  #       with:
  #         repository: ASoftGlow/scra
  #         token: ${{ secrets.GH_SCRA_PAT }}
  #     - name: Setup Node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "lts/*"
  #         cache: npm
  #     - name: Restore cache
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           .next/cache
  #         # Generate a new cache whenever packages or source files change.
  #         key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.tsx') }}
  #         # If source files changed but packages didn't, rebuild from a prior cache.
  #         restore-keys: |
  #           ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
  #     - name: Install dependencies
  #       run: npm install
  #     - name: Build with Next.js
  #       run: npx --no-install next build
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         path: 'out'
  #         name: scra
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build-dev]
    steps:
      - name: Download dev artifact
        uses: actions/download-artifact@v3
        with:
          name: dev
      # - name: Download scra artifact
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: scra
      #     path: scra
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
